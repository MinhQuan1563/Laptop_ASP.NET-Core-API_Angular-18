// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WAAL.Persistence;

#nullable disable

namespace WAAL.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250304181607_DeleteTrangThaiChiTietQuyen")]
    partial class DeleteTrangThaiChiTietQuyen
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("WAAL.Domain.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullRoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("WAAL.Domain.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<int>("Tuoi")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("WAAL.Domain.Entities.CardDoHoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CardDoHoas");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietCongKetNoi", b =>
                {
                    b.Property<Guid>("MaCtsp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaCong")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MaCtsp", "MaCong");

                    b.HasIndex("MaCong");

                    b.ToTable("ChiTietCongKetNois");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietHoaDon", b =>
                {
                    b.Property<Guid>("MaHd")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaImei")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaSp")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaHd", "MaImei");

                    b.HasIndex("MaImei");

                    b.ToTable("ChiTietHoaDons");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietKhuyenMai", b =>
                {
                    b.Property<Guid>("MaHd")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaKm")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaTienGIam")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("MaHd", "MaKm");

                    b.HasIndex("MaKm");

                    b.ToTable("ChiTietKhuyenMais");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietPhieuBaoHanh", b =>
                {
                    b.Property<Guid>("MaPbh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaImei")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungBaoHanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPbh", "MaImei");

                    b.HasIndex("MaImei");

                    b.ToTable("ChiTietPhieuBaoHanhs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietPhieuDoiTra", b =>
                {
                    b.Property<Guid>("MaPdt")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaImei")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaSp")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("MaPdt", "MaImei");

                    b.HasIndex("MaImei");

                    b.ToTable("ChiTietPhieuDoiTras");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietPhieuNhap", b =>
                {
                    b.Property<Guid>("MaPn")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaCtsp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaTien")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("MaPn", "MaCtsp");

                    b.HasIndex("MaCtsp");

                    b.ToTable("ChiTietPhieuNhaps");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietQuyen", b =>
                {
                    b.Property<Guid>("MaChucNang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HanhDong")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaChucNang", "RoleId", "HanhDong");

                    b.HasIndex("RoleId");

                    b.ToTable("ChiTietQuyens");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CardDoHoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("ChietKhau")
                        .HasColumnType("real");

                    b.Property<Guid>("ChipXuLyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaNhap")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("GiaTien")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("MauSacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CardDoHoaId");

                    b.HasIndex("ChipXuLyId");

                    b.HasIndex("MauSacId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("ChiTietSanPhams");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChipXuLy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenChip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ChipXuLys");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChucNang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenChucNang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ChucNangs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.CongKetNoi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenCong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CongKetNois");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.DanhGia", b =>
                {
                    b.Property<Guid>("MaSp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ThoiGianDanhGia")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaSp", "UserId", "ThoiGianDanhGia");

                    b.HasIndex("UserId");

                    b.ToTable("DanhGias");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.GioHang", b =>
                {
                    b.Property<Guid>("MaCtsp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaCtsp", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.HeDieuHanh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenHdh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("HeDieuHanhs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhuongThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ThongTinNhanHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TongTienSauKhuyenMai")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ThongTinNhanHangId");

                    b.HasIndex("UserId");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.Imei", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietSanPhamId");

                    b.ToTable("Imeis");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.KhuyenMai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DieuKien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MucKhuyenMai")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TenKhuyenMai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("KhuyenMais");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.MauSac", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaMau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MauSacs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.NhaCungCap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNcc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("NhaCungCaps");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuBaoHanh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HoaDonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayBaoHanh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTra")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.HasIndex("UserId");

                    b.ToTable("PhieuBaoHanhs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuDoiTra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HoaDonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTra")
                        .HasColumnType("datetime2");

                    b.Property<int>("TongSoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTienTra")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.HasIndex("UserId");

                    b.ToTable("PhieuDoiTras");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuNhap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NhaCungCapId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NhaCungCapId");

                    b.HasIndex("UserId");

                    b.ToTable("PhieuNhaps");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.SanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BanPhim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChatLieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoPhanGiai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HeDieuHanhId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KichCoManHinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TenSp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TheLoaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ThuongHieuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<double>("TrongLuong")
                        .HasColumnType("float");

                    b.Property<string>("XuatXu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeDieuHanhId");

                    b.HasIndex("TheLoaiId");

                    b.HasIndex("ThuongHieuId");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.TheLoai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TheLoais");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ThongBao", b =>
                {
                    b.Property<Guid>("MaSp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaHd")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaPn")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaPbh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaPdt")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaNcc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaKm")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaSp", "UserId", "MaHd", "MaPn", "MaPbh", "MaPdt", "MaNcc", "MaKm");

                    b.HasIndex("MaHd");

                    b.HasIndex("MaKm");

                    b.HasIndex("MaNcc");

                    b.HasIndex("MaPbh");

                    b.HasIndex("MaPdt");

                    b.HasIndex("MaPn");

                    b.HasIndex("UserId");

                    b.ToTable("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ThongTinNhanHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DiaChiMacDinh")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ThongTinNhanHangs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ThuongHieu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ThuongHieus");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietCongKetNoi", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.CongKetNoi", "CongKetNoi")
                        .WithMany("ChiTietCongKetNois")
                        .HasForeignKey("MaCong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("ChiTietCongKetNois")
                        .HasForeignKey("MaCtsp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("CongKetNoi");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietHoaDon", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaHd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.Imei", "Imei")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaImei")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("Imei");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietKhuyenMai", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.HoaDon", "HoaDon")
                        .WithMany("ChiTietKhuyenMais")
                        .HasForeignKey("MaHd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.KhuyenMai", "KhuyenMai")
                        .WithMany("ChiTietKhuyenMais")
                        .HasForeignKey("MaKm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("KhuyenMai");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietPhieuBaoHanh", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.Imei", "Imei")
                        .WithMany("ChiTietPhieuBaoHanhs")
                        .HasForeignKey("MaImei")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.PhieuBaoHanh", "PhieuBaoHanh")
                        .WithMany("ChiTietPhieuBaoHanhs")
                        .HasForeignKey("MaPbh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imei");

                    b.Navigation("PhieuBaoHanh");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietPhieuDoiTra", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.Imei", "Imei")
                        .WithMany("ChiTietPhieuDoiTras")
                        .HasForeignKey("MaImei")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.PhieuDoiTra", "PhieuDoiTra")
                        .WithMany("ChiTietPhieuDoiTras")
                        .HasForeignKey("MaPdt")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imei");

                    b.Navigation("PhieuDoiTra");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietPhieuNhap", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("ChiTietPhieuNhaps")
                        .HasForeignKey("MaCtsp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.PhieuNhap", "PhieuNhap")
                        .WithMany("ChiTietPhieuNhaps")
                        .HasForeignKey("MaPn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("PhieuNhap");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietQuyen", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.ChucNang", "ChucNang")
                        .WithMany("ChiTietQuyens")
                        .HasForeignKey("MaChucNang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.AppRole", "Role")
                        .WithMany("ChiTietQuyens")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucNang");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietSanPham", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.CardDoHoa", "CardDoHoa")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("CardDoHoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.ChipXuLy", "ChipXuLy")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("ChipXuLyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.MauSac", "MauSac")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("MauSacId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.SanPham", "SanPham")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CardDoHoa");

                    b.Navigation("ChipXuLy");

                    b.Navigation("MauSac");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.DanhGia", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.SanPham", "SanPham")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaSp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.AppUser", "User")
                        .WithMany("DanhGias")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.GioHang", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("GioHangs")
                        .HasForeignKey("MaCtsp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.AppUser", "User")
                        .WithMany("GioHangs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.HoaDon", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.ThongTinNhanHang", "ThongTinNhanHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("ThongTinNhanHangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.AppUser", "User")
                        .WithMany("HoaDons")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ThongTinNhanHang");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.Imei", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("Imeis")
                        .HasForeignKey("ChiTietSanPhamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuBaoHanh", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.HoaDon", "HoaDon")
                        .WithMany("PhieuBaoHanhs")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.AppUser", "User")
                        .WithMany("PhieuBaoHanhs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuDoiTra", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.HoaDon", "HoaDon")
                        .WithMany("PhieuDoiTras")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.AppUser", "User")
                        .WithMany("PhieuDoiTras")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuNhap", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.NhaCungCap", "NhaCungCap")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("NhaCungCapId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.AppUser", "User")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NhaCungCap");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.SanPham", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.HeDieuHanh", "HeDieuHanh")
                        .WithMany("SanPhams")
                        .HasForeignKey("HeDieuHanhId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.TheLoai", "TheLoai")
                        .WithMany("SanPhams")
                        .HasForeignKey("TheLoaiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.ThuongHieu", "ThuongHieu")
                        .WithMany("SanPhams")
                        .HasForeignKey("ThuongHieuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HeDieuHanh");

                    b.Navigation("TheLoai");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ThongBao", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.HoaDon", "HoaDon")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaHd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.KhuyenMai", "KhuyenMai")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaKm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.NhaCungCap", "NhaCungCap")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaNcc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.PhieuBaoHanh", "PhieuBaoHanh")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaPbh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.PhieuDoiTra", "PhieuDoiTra")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaPdt")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.PhieuNhap", "PhieuNhap")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaPn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.SanPham", "SanPham")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaSp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.AppUser", "User")
                        .WithMany("ThongBaos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("KhuyenMai");

                    b.Navigation("NhaCungCap");

                    b.Navigation("PhieuBaoHanh");

                    b.Navigation("PhieuDoiTra");

                    b.Navigation("PhieuNhap");

                    b.Navigation("SanPham");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ThongTinNhanHang", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.AppUser", "User")
                        .WithMany("ThongTinNhanHangs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.AppRole", b =>
                {
                    b.Navigation("ChiTietQuyens");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");

                    b.Navigation("PhieuBaoHanhs");

                    b.Navigation("PhieuDoiTras");

                    b.Navigation("PhieuNhaps");

                    b.Navigation("ThongBaos");

                    b.Navigation("ThongTinNhanHangs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.CardDoHoa", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietSanPham", b =>
                {
                    b.Navigation("ChiTietCongKetNois");

                    b.Navigation("ChiTietPhieuNhaps");

                    b.Navigation("GioHangs");

                    b.Navigation("Imeis");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChipXuLy", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChucNang", b =>
                {
                    b.Navigation("ChiTietQuyens");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.CongKetNoi", b =>
                {
                    b.Navigation("ChiTietCongKetNois");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.HeDieuHanh", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("ChiTietKhuyenMais");

                    b.Navigation("PhieuBaoHanhs");

                    b.Navigation("PhieuDoiTras");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.Imei", b =>
                {
                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("ChiTietPhieuBaoHanhs");

                    b.Navigation("ChiTietPhieuDoiTras");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.KhuyenMai", b =>
                {
                    b.Navigation("ChiTietKhuyenMais");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.MauSac", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.NhaCungCap", b =>
                {
                    b.Navigation("PhieuNhaps");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuBaoHanh", b =>
                {
                    b.Navigation("ChiTietPhieuBaoHanhs");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuDoiTra", b =>
                {
                    b.Navigation("ChiTietPhieuDoiTras");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuNhap", b =>
                {
                    b.Navigation("ChiTietPhieuNhaps");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.SanPham", b =>
                {
                    b.Navigation("ChiTietSanPhams");

                    b.Navigation("DanhGias");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.TheLoai", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ThongTinNhanHang", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ThuongHieu", b =>
                {
                    b.Navigation("SanPhams");
                });
#pragma warning restore 612, 618
        }
    }
}
