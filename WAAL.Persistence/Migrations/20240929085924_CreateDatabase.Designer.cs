// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WAAL.Persistence;

#nullable disable

namespace WAAL.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240929085924_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WAAL.Domain.Entities.CardDoHoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CardDoHoas");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietCongKetNoi", b =>
                {
                    b.Property<int>("MaCtsp")
                        .HasColumnType("int");

                    b.Property<int>("MaCong")
                        .HasColumnType("int");

                    b.HasKey("MaCtsp", "MaCong");

                    b.HasIndex("MaCong");

                    b.ToTable("ChiTietCongKetNois");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietHoaDon", b =>
                {
                    b.Property<int>("MaHd")
                        .HasColumnType("int");

                    b.Property<int>("MaImei")
                        .HasColumnType("int");

                    b.Property<decimal>("GiaSp")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaHd", "MaImei");

                    b.HasIndex("MaImei");

                    b.ToTable("ChiTietHoaDons");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietKhuyenMai", b =>
                {
                    b.Property<int>("MaHd")
                        .HasColumnType("int");

                    b.Property<int>("MaKm")
                        .HasColumnType("int");

                    b.Property<decimal>("GiaTien")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("MaHd", "MaKm");

                    b.HasIndex("MaKm");

                    b.ToTable("ChiTietKhuyenMais");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietPhieuBaoHanh", b =>
                {
                    b.Property<int>("MaPbh")
                        .HasColumnType("int");

                    b.Property<int>("MaImei")
                        .HasColumnType("int");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungBaoHanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPbh", "MaImei");

                    b.HasIndex("MaImei");

                    b.ToTable("ChiTietPhieuBaoHanhs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietPhieuDoiTra", b =>
                {
                    b.Property<int>("MaPdt")
                        .HasColumnType("int");

                    b.Property<int>("MaImei")
                        .HasColumnType("int");

                    b.Property<decimal>("GiaSp")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("MaPdt", "MaImei");

                    b.HasIndex("MaImei");

                    b.ToTable("ChiTietPhieuDoiTras");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietPhieuNhap", b =>
                {
                    b.Property<int>("MaPn")
                        .HasColumnType("int");

                    b.Property<int>("MaCtsp")
                        .HasColumnType("int");

                    b.Property<decimal>("GiaTien")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("MaPn", "MaCtsp");

                    b.HasIndex("MaCtsp");

                    b.ToTable("ChiTietPhieuNhaps");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietQuyen", b =>
                {
                    b.Property<int>("MaQuyen")
                        .HasColumnType("int");

                    b.Property<int>("MaChucNang")
                        .HasColumnType("int");

                    b.Property<string>("HanhDong")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaQuyen", "MaChucNang", "HanhDong");

                    b.HasIndex("MaChucNang");

                    b.ToTable("ChiTietQuyens");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardDoHoaId")
                        .HasColumnType("int");

                    b.Property<float>("ChietKhau")
                        .HasColumnType("real");

                    b.Property<int>("ChipXuLyId")
                        .HasColumnType("int");

                    b.Property<decimal>("GiaNhap")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("GiaTien")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("MauSacId")
                        .HasColumnType("int");

                    b.Property<string>("Ram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CardDoHoaId");

                    b.HasIndex("ChipXuLyId");

                    b.HasIndex("MauSacId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("ChiTietSanPham");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChipXuLy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenChip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ChipXuLys");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChucNang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenChucNang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ChucNangs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.CongKetNoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenCong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CongKetNois");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.DanhGia", b =>
                {
                    b.Property<int>("MaSp")
                        .HasColumnType("int");

                    b.Property<int>("MaKh")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianDanhGia")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaSp", "MaKh", "ThoiGianDanhGia");

                    b.HasIndex("MaKh");

                    b.ToTable("DanhGias");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.GioHang", b =>
                {
                    b.Property<int>("MaCtsp")
                        .HasColumnType("int");

                    b.Property<int>("MaKh")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaCtsp", "MaKh");

                    b.HasIndex("MaKh");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.HeDieuHanh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenHdh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("HeDieuHanhs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.HoaDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<int>("ThongTinNhanHangId")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("NhanVienId");

                    b.HasIndex("ThongTinNhanHangId");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.Imei", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChiTietSanPhamId")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietSanPhamId");

                    b.ToTable("Imeis");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.KhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.KhuyenMai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DieuKien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MucKhuyenMai")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TenKhuyenMai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("KhuyenMais");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.MauSac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenMau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MauSacs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.NhaCungCap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNcc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("NhaCungCaps");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.NhanVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<int>("Tuoi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.NhomQuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenQuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("NhomQuyens");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuBaoHanh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HoaDonId")
                        .HasColumnType("int");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBaoHanh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTra")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("PhieuBaoHanhs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuDoiTra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HoaDonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTra")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<int>("TongSoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTienTra")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("PhieuDoiTras");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuNhap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhaCungCapId")
                        .HasColumnType("int");

                    b.Property<int>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NhaCungCapId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("PhieuNhaps");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.SanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BanPhim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChatLieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoPhanGiai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HeDieuHanhId")
                        .HasColumnType("int");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KichCoManHinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TenSp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TheLoaiId")
                        .HasColumnType("int");

                    b.Property<int>("ThuongHieuId")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<double>("TrongLuong")
                        .HasColumnType("float");

                    b.Property<string>("XuatXu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeDieuHanhId");

                    b.HasIndex("TheLoaiId");

                    b.HasIndex("ThuongHieuId");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.TaiKhoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NhomQuyenId")
                        .HasColumnType("int");

                    b.Property<int>("Otp")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NhomQuyenId");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.TheLoai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TheLoais");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ThongBao", b =>
                {
                    b.Property<int>("MaSp")
                        .HasColumnType("int");

                    b.Property<int>("MaKh")
                        .HasColumnType("int");

                    b.Property<int>("MaNv")
                        .HasColumnType("int");

                    b.Property<int>("MaTk")
                        .HasColumnType("int");

                    b.Property<int>("MaHd")
                        .HasColumnType("int");

                    b.Property<int>("MaPn")
                        .HasColumnType("int");

                    b.Property<int>("MaPbh")
                        .HasColumnType("int");

                    b.Property<int>("MaPdt")
                        .HasColumnType("int");

                    b.Property<int>("MaNcc")
                        .HasColumnType("int");

                    b.Property<int>("MaKm")
                        .HasColumnType("int");

                    b.Property<int>("MaNq")
                        .HasColumnType("int");

                    b.Property<int>("MaCn")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaSp", "MaKh", "MaNv", "MaTk", "MaHd", "MaPn", "MaPbh", "MaPdt", "MaNcc", "MaKm", "MaNq", "MaCn");

                    b.HasIndex("MaCn");

                    b.HasIndex("MaHd");

                    b.HasIndex("MaKh");

                    b.HasIndex("MaKm");

                    b.HasIndex("MaNcc");

                    b.HasIndex("MaNq");

                    b.HasIndex("MaNv");

                    b.HasIndex("MaPbh");

                    b.HasIndex("MaPdt");

                    b.HasIndex("MaPn");

                    b.HasIndex("MaTk");

                    b.ToTable("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ThongTinNhanHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DiaChiMacDinh")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.ToTable("ThongTinNhanHangs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ThuongHieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ThuongHieus");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietCongKetNoi", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.CongKetNoi", "CongKetNoi")
                        .WithMany("ChiTietCongKetNois")
                        .HasForeignKey("MaCong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("ChiTietCongKetNois")
                        .HasForeignKey("MaCtsp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("CongKetNoi");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietHoaDon", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaHd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.Imei", "Imei")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaImei")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("Imei");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietKhuyenMai", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.HoaDon", "HoaDon")
                        .WithMany("ChiTietKhuyenMais")
                        .HasForeignKey("MaHd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.KhuyenMai", "KhuyenMai")
                        .WithMany("ChiTietKhuyenMais")
                        .HasForeignKey("MaKm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("KhuyenMai");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietPhieuBaoHanh", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.Imei", "Imei")
                        .WithMany("ChiTietPhieuBaoHanhs")
                        .HasForeignKey("MaImei")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.PhieuBaoHanh", "PhieuBaoHanh")
                        .WithMany("ChiTietPhieuBaoHanhs")
                        .HasForeignKey("MaPbh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imei");

                    b.Navigation("PhieuBaoHanh");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietPhieuDoiTra", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.Imei", "Imei")
                        .WithMany("ChiTietPhieuDoiTras")
                        .HasForeignKey("MaImei")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.PhieuDoiTra", "PhieuDoiTra")
                        .WithMany("ChiTietPhieuDoiTras")
                        .HasForeignKey("MaPdt")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imei");

                    b.Navigation("PhieuDoiTra");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietPhieuNhap", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("ChiTietPhieuNhaps")
                        .HasForeignKey("MaCtsp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.PhieuNhap", "PhieuNhap")
                        .WithMany("ChiTietPhieuNhaps")
                        .HasForeignKey("MaPn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("PhieuNhap");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietQuyen", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.ChucNang", "ChucNang")
                        .WithMany("ChiTietQuyens")
                        .HasForeignKey("MaChucNang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.NhomQuyen", "NhomQuyen")
                        .WithMany("ChiTietQuyens")
                        .HasForeignKey("MaQuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucNang");

                    b.Navigation("NhomQuyen");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietSanPham", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.CardDoHoa", "CardDoHoa")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("CardDoHoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.ChipXuLy", "ChipXuLy")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("ChipXuLyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.MauSac", "MauSac")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("MauSacId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.SanPham", "SanPham")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CardDoHoa");

                    b.Navigation("ChipXuLy");

                    b.Navigation("MauSac");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.DanhGia", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaKh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.SanPham", "SanPham")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaSp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.GioHang", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("GioHangs")
                        .HasForeignKey("MaCtsp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("GioHangs")
                        .HasForeignKey("MaKh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.HoaDon", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.NhanVien", "NhanVien")
                        .WithMany("HoaDons")
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.ThongTinNhanHang", "ThongTinNhanHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("ThongTinNhanHangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");

                    b.Navigation("ThongTinNhanHang");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.Imei", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("Imeis")
                        .HasForeignKey("ChiTietSanPhamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuBaoHanh", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.HoaDon", "HoaDon")
                        .WithMany("PhieuBaoHanhs")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("PhieuBaoHanhs")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.NhanVien", "NhanVien")
                        .WithMany("PhieuBaoHanhs")
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuDoiTra", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.HoaDon", "HoaDon")
                        .WithMany("PhieuDoiTras")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.NhanVien", "NhanVien")
                        .WithMany("PhieuDoiTras")
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuNhap", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.NhaCungCap", "NhaCungCap")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("NhaCungCapId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.NhanVien", "NhanVien")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NhaCungCap");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.SanPham", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.HeDieuHanh", "HeDieuHanh")
                        .WithMany("SanPhams")
                        .HasForeignKey("HeDieuHanhId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.TheLoai", "TheLoai")
                        .WithMany("SanPhams")
                        .HasForeignKey("TheLoaiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.ThuongHieu", "ThuongHieu")
                        .WithMany("SanPhams")
                        .HasForeignKey("ThuongHieuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HeDieuHanh");

                    b.Navigation("TheLoai");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.TaiKhoan", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.NhomQuyen", "NhomQuyen")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("NhomQuyenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NhomQuyen");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ThongBao", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.ChucNang", "ChucNang")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaCn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.HoaDon", "HoaDon")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaHd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaKh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.KhuyenMai", "KhuyenMai")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaKm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.NhaCungCap", "NhaCungCap")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaNcc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.NhomQuyen", "NhomQuyen")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaNq")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.NhanVien", "NhanVien")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaNv")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.PhieuBaoHanh", "PhieuBaoHanh")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaPbh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.PhieuDoiTra", "PhieuDoiTra")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaPdt")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.PhieuNhap", "PhieuNhap")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaPn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.SanPham", "SanPham")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaSp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WAAL.Domain.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaTk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucNang");

                    b.Navigation("HoaDon");

                    b.Navigation("KhachHang");

                    b.Navigation("KhuyenMai");

                    b.Navigation("NhaCungCap");

                    b.Navigation("NhanVien");

                    b.Navigation("NhomQuyen");

                    b.Navigation("PhieuBaoHanh");

                    b.Navigation("PhieuDoiTra");

                    b.Navigation("PhieuNhap");

                    b.Navigation("SanPham");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ThongTinNhanHang", b =>
                {
                    b.HasOne("WAAL.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("ThongTinNhanHangs")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.CardDoHoa", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChiTietSanPham", b =>
                {
                    b.Navigation("ChiTietCongKetNois");

                    b.Navigation("ChiTietPhieuNhaps");

                    b.Navigation("GioHangs");

                    b.Navigation("Imeis");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChipXuLy", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ChucNang", b =>
                {
                    b.Navigation("ChiTietQuyens");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.CongKetNoi", b =>
                {
                    b.Navigation("ChiTietCongKetNois");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.HeDieuHanh", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("ChiTietKhuyenMais");

                    b.Navigation("PhieuBaoHanhs");

                    b.Navigation("PhieuDoiTras");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.Imei", b =>
                {
                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("ChiTietPhieuBaoHanhs");

                    b.Navigation("ChiTietPhieuDoiTras");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.KhachHang", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");

                    b.Navigation("PhieuBaoHanhs");

                    b.Navigation("ThongBaos");

                    b.Navigation("ThongTinNhanHangs");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.KhuyenMai", b =>
                {
                    b.Navigation("ChiTietKhuyenMais");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.MauSac", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.NhaCungCap", b =>
                {
                    b.Navigation("PhieuNhaps");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.NhanVien", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("PhieuBaoHanhs");

                    b.Navigation("PhieuDoiTras");

                    b.Navigation("PhieuNhaps");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.NhomQuyen", b =>
                {
                    b.Navigation("ChiTietQuyens");

                    b.Navigation("TaiKhoans");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuBaoHanh", b =>
                {
                    b.Navigation("ChiTietPhieuBaoHanhs");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuDoiTra", b =>
                {
                    b.Navigation("ChiTietPhieuDoiTras");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.PhieuNhap", b =>
                {
                    b.Navigation("ChiTietPhieuNhaps");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.SanPham", b =>
                {
                    b.Navigation("ChiTietSanPhams");

                    b.Navigation("DanhGias");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.TaiKhoan", b =>
                {
                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.TheLoai", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ThongTinNhanHang", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("WAAL.Domain.Entities.ThuongHieu", b =>
                {
                    b.Navigation("SanPhams");
                });
#pragma warning restore 612, 618
        }
    }
}
